----------------------------------------------------------------------
--
-- Copyright (c) 2004-2005, Andrew S. Townley
-- All rights reserved.
-- 
-- Redistribution and use in source and binary forms, with or without
-- modification, are permitted provided that the following conditions
-- are met:
-- 
--     * Redistributions of source code must retain the above
--     copyright notice, this list of conditions and the following
--     disclaimer.
-- 
--     * Redistributions in binary form must reproduce the above
--     copyright notice, this list of conditions and the following
--     disclaimer in the documentation and/or other materials provided
--     with the distribution.
-- 
--     * Neither the names Andrew Townley or Townley Enterprises,
--     Inc. nor the names of its contributors may be used to endorse
--     or promote products derived from this software without specific
--     prior written permission.  
-- 
-- THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-- "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-- LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
-- FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
-- COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
-- INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
-- (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
-- SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
-- HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
-- STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
-- ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
-- OF THE POSSIBILITY OF SUCH DAMAGE.
--
-- File:		schema.sql.in
-- Created:		Mon Dec 27 14:03:18 GMT 2004
--
-- $Id: schema.sql.in,v 1.3 2005/01/09 11:20:58 atownley Exp $
--
----------------------------------------------------------------------

----------------------------------------------------------------------
-- This table tracks the version of the database schema so that we can
-- perform checks for compatiblity in the future.
----------------------------------------------------------------------

create table version_info (
	what		varchar(30) not null,
	version		varchar(60) not null,
	installed	timestamp(5) not null,
	rcsid		varchar(80) not null,
	constraint version_info_pk primary key (what)
);

----------------------------------------------------------------------
-- Populate the values generated by the build script based on the
-- version information.
----------------------------------------------------------------------

insert into version_info (what, version, installed, rcsid) values ('@build.version.project@', '@build.version.major@.@build.version.minor@.@build.version.release@ (Build @build.version.count@; @build.version.date@)', current_timestamp(5), '$Id: schema.sql.in,v 1.3 2005/01/09 11:20:58 atownley Exp $');

----------------------------------------------------------------------
-- Create a counter table to manage the ID references for the
-- primary keys.  This is a slightly more complex approach to managing
-- these keys than using a vendor-specific built-in mechanism, but it
-- means that we don't generally care what database we're using.  It
-- also means that we don't have to keep track of a lot of
-- database-specific code.
----------------------------------------------------------------------

create table counter (
	what		varchar(40) not null,
	val		integer not null,
	constraint counter_pk primary key (what)
);

----------------------------------------------------------------------
-- This table keeps track of the core inforation about a given author.
----------------------------------------------------------------------

create table author (
	author_id	integer not null,
	first_name	varchar(50),
	last_name	varchar(50) not null,
	middle_initial	char(1),
	constraint author_pk primary key (author_id)
);

----------------------------------------------------------------------
-- This table is mostly a place-holder to keep track of the publisher
-- information.
----------------------------------------------------------------------

create table publisher (
	publisher_id	integer not null,
	name		varchar(100) not null,
	constraint publisher_pk primary key (publisher_id)
);

----------------------------------------------------------------------
-- This table represents a book in the system.  We aren't going for
-- completeness here, just enough to make things interesting.
----------------------------------------------------------------------

create table book (
	book_id		integer not null,
	author_id	integer not null,
	publisher_id	integer not null,
	title		varchar(50) not null,
	subtitle	varchar(100),
	publish_date	date not null,
	isbn		char(10) not null,
	remarks		varchar(256),
	constraint book_pk primary key (book_id),
	constraint book_author_id_fk foreign key (author_id) references author(author_id),
	constraint book_publisher_id_fk foreign key (publisher_id) references publisher(publisher_id)
);
